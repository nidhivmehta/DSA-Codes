int solve(int index, vector<int> &dp, vector<int> houses) {
    if(index == 0)
        return houses[index];
    if(index < 0)
        return 0;
    if(dp[index] != -1)
        return dp[index];

    int pick = houses[index] + solve(index-2, dp, houses);
    int notPick = 0 + solve(index-1, dp, houses);
    
    return dp[index] = max(pick, notPick);
}

int maxMoneyLooted(vector<int> &houses, int n)
{
	vector<int> dp(n, -1);
    return solve(n-1, dp, houses);
}
