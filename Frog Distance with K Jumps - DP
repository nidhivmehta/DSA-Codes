Memoization

int solve(int index, vector<int> height, vector<int> &dp, int k) {
    if(index == 0)
        return 0;
        
    if(dp[index] != -1)
        return dp[index];
        
    int minSteps = INT_MAX;
    for(int j=1; j<=k; j++) {
        if(index - j >= 0) {
            int jump = solve(index-j, height, dp, k) + abs(height[index] - height[index-j]);
        minSteps = min(jump, minSteps);
        }
    }
    
    return dp[index] = minSteps;
    
    
    
    
}

int frogJump(int n, vector<int>& height , int k){
    vector<int> dp(n,-1);
    return solve(n-1, height, dp, k);
}
